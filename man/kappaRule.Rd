% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kappaRule.R
\name{kappaRule}
\alias{kappaRule}
\title{The RuleFit function}
\usage{
kappaRule(
  data,
  y,
  ntree = 200,
  max.depth = 3,
  rule.filter = 10,
  bootstrap.rounds = 100,
  rule.extract.cores = 64,
  kappa.cores = 24
)
}
\arguments{
\item{data}{training data}

\item{y}{outcome variable name/ target variable}

\item{ntree}{number of trees to be built, defaults to 200}

\item{max.depth}{maximum tree depth, defaults to 3}

\item{rule.filter}{filter the top n rules based on kappa statistic. If NULL, the rules are filter above a kappa of 0.05}

\item{rule.extract.cores}{number of cores for parallel, defaults to 4. This is specifically for the varpp rule extract step (less memory hungry than the cv.glmnet step)}

\item{kappa.cores}{number of cores used for the rule filtering by kappa. This needs to be seperate, as it is quite memory intensive when the input + rule data is very large. Defaults to 2.
This defaults to TRUE}
}
\value{
A list of predictions for the outcome. Further, a variable importance list for all rules and variables tested.
}
\description{
This is rulefit in general. When not using the VARPP framework, this function allows to perform rulefit on any data set with a
binary outcome.
}
